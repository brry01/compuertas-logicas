/**
 * ALU
 */

CHIP ALU {
    IN x[16], y[16], zx, nx, zy, ny, f, no; 
    OUT out[16], zr, ng; 

    PARTS:

   // zx, nx
   MUX16(a=x, b=false, sel=zx, out=zerox);
   NOT16(in=zerox, out=notx);
   MUX16(a=zerox, b=notx, sel=nx, out=inpx);

   // zy, ny
   MUX16(a=y, b=false, sel=zy, out=zeroy);
   NOT16(in=zeroy, out=noty);
   MUX16(a=zeroy, b=noty, sel=ny, out=inpy);

   // f
   ADD16(a=inpx, b=inpy, out=addxy);
   AND16(a=inpx, b=inpy, out=andxy);
   MUX16(a=andxy, b=addxy, sel=f, out=fxy);

   // no, ng
   NOT16(in=fxy, out=notfxy);
   MUX16(a=fxy, b=notfxy, sel=no, out=out, out[0..7] = pzr1, out[8..15] = pzr2, out[15] = ng);

   // zr
   OR8WAY(in=pzr1, out=zr1);
   OR8WAY(in=pzr2, out=zr2);
   OR(a=zr1, b=zr2, out=notzr);
   NOT(in=notzr, out=zr);
}